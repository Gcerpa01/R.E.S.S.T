#ifndef PROJECT_CONSTANTS_H_
#define PROJECT_CONSTANTS_H_

#include <main.h>
#include <stdio.h>
#include "basic_helpers.h"

//Values for Setting Frequencies
/* FIFTY HZ Values */
#define FIFTY_HZ_PRESCALER 999
#define FITY_HZ_PERIOD  1439
#define FIFTY_HZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 72
#define FIFTY_HZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 108
#define FIFTY_HZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 108
#define FIFTY_HZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 144

/* EIGHT KHZ Values */
#define EIGHT_KHZ_PRESCALER 10
#define EIGHT_KHZ_PERIOD  7200
//Assuming 5 - 10% duty cycle
#define EIGHT_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 45
#define EIGHT_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 68
#define EIGHT_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 68
#define EIGHT_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 90
//Assuming 0 - 100%
#define FULL_EIGHT_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 0
#define FULL_EIGHT_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 3600
#define FULL_EIGHT_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 3600
#define FULL_EIGHT_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 720

/* TWELVE KHZ Values */
#define TWELVE_KHZ_PRESCALER 5
#define TWELVE_KHZ_PERIOD  1200
//Assuming 5 - 10% duty cycle
#define TWELVE_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 60
#define TWELVE_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 90
#define TWELVE_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 90
#define TWELVE_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 120
//Assuming 0 - 100%
#define TWELVE_SIXTEEN_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 0
#define TWELVE_SIXTEEN_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 600
#define TWELVE_SIXTEEN_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 600
#define TWELVE_SIXTEEN_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 1200

/* SIXTEEN KHZ Values */
#define SIXTEEN_KHZ_PRESCALER 5
#define SIXTEEN_KHZ_PERIOD  900
//Assuming 5 - 10% duty cycle
#define SIXTEEN_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 45
#define SIXTEEN_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 68
#define SIXTEEN_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 68
#define SIXTEEN_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 90
//Assuming 0 - 100%
#define FULL_SIXTEEN_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 0
#define FULL_SIXTEEN_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 450
#define FULL_SIXTEEN_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 450
#define FULL_SIXTEEN_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 900

/* FIFTY KHZ Values */
#define FIFTY_HZ_PRESCALER 999
#define FIFTY_HZ_PERIOD  1439
//Assuming 5 - 10% duty cycle
#define FIFTY_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 72
#define FIFTY_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 108
#define FIFTY_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 108
#define FIFTY_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 144
//Assuming 0 - 100%
#define FULL_FIFTY_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MIN 0
#define FULL_FIFTY_KHZ_BRAKING_CCR_FOR_DUTY_CYCLE_MAX 720
#define FULL_FIFTY_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MIN 720
#define FULL_FIFTY_KHZ_ACCEL_CCR_FOR_DUTY_CYCLE_MAX 1440

//Values needed for controlling steering 
#define JOYSTICK_MIN -255
#define JOYSTICK_MAX 255
#define CCR_FOR_STEERING_MIN 72
#define CCR_FOR_STEERING_MAX 144
#define STEERING_THRESHOLD 0.01

#define WHEELBASE 7 //inches change to vehicle specs
#define SERVO_ANGLE_MAX 90
#define SERVO_ANGLE_MIN 0

//Values needed for accellerating motors
extern int LAND_BRAKING_CCR_FOR_DUTY_CYCLE_MIN;
extern int LAND_BRAKING_CCR_FOR_DUTY_CYCLE_MAX;
extern int LAND_ACCEL_CCR_FOR_DUTY_CYCLE_MIN;
extern int LAND_ACCEL_CCR_FOR_DUTY_CYCLE_MAX;
extern float LAND_ACCEL_TRIANGLE_PERCENTAGE;
extern int LAND_MOTOR_PERIOD;

#define ACCEL_TRIGGER_MIN 0
#define ACCEL_TRIGGER_MAX 255

#define BRAKE_TRIGGER_MIN 0
#define BRAKE_TRIGGER_MAX 255

//Values needed for tracking RPM
#define POLES 8
#define LINEAR_TRACTION_THRESHOLD 0.05
#define TURNING_TRACITON_THRESHOLD 0.02

//Values needed for controlling the vehicle
#define ACC_THROTTLE CONTROLLER_VALUES[0]
#define BRAKE_THROTTLE CONTROLLER_VALUES[1]
#define JOYSTICK CONTROLLER_VALUES[2]
#define CROSS CONTROLLER_VALUES[3]
#define CIRCLE CONTROLLER_VALUES[4]
#define SQUARE CONTROLLER_VALUES[5]
#define TRIANGLE CONTROLLER_VALUES[6]
#define L1 CONTROLLER_VALUES[7]
#define R_JOYSTICK CONTROLLER_VALUES[8]
extern int CONTROLLER_VALUES[9];
extern bool TRACTION_CONTROL;
extern bool ON_LAND;
extern int JOYSTICK_INPUT;
extern int THROTTLE_INPUT;

//Tracking Steering
enum STEER {
    LEFT,
    RIGHT,
    NEUTRAL
};
extern enum STEER CURRENT_STEERING;

//Tracking Slippage and Traction
enum MOTORS {
    FRONT_RIGHT,
    FRONT_LEFT,
    BACK_RIGHT,
    BACK_LEFT,
    NONE
};
extern enum MOTORS WHEEL;

//MISC
#define MAX_RPM_VALUE 1000000
#define MIN_RPM_VALUE -1000000

#endif
